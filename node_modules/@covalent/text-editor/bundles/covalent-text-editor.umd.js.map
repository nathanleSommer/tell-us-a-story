{
  "version": 3,
  "file": "covalent-text-editor.umd.js",
  "sources": [
    "ng://@covalent/text-editor/out/text-editor.module.ts",
    "ng://@covalent/text-editor/out/text-editor.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdTextEditorComponent } from './text-editor.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TdTextEditorComponent,\n  ],\n  exports: [\n    TdTextEditorComponent,\n  ],\n  entryComponents: [ ],\n  bootstrap: [ TdTextEditorComponent ],\n})\nexport class CovalentTextEditorModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CovalentTextEditorModule,\n      providers: [ ],\n    };\n  }\n}\n",
    "import { Component, Input, Output, EventEmitter, OnInit, AfterViewInit, ViewChild,\n         ElementRef, forwardRef, ViewEncapsulation, NgZone, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport * as SimpleMDE from 'simplemde';\n// using 'import * as' not working in Angular 5 for some reason\n/* tslint:disable-next-line */\nlet SimpleMDECss = require('simplemde/dist/simplemde.min.css');\n\nconst noop: any = () => {\n  // empty method\n};\n\n@Component({\n  selector: 'td-text-editor',\n  template: `<div>\n<textarea #simplemde></textarea>\n</div>\n`,\n  styles: [``],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdTextEditorComponent),\n    multi: true,\n  }],\n})\nexport class TdTextEditorComponent implements AfterViewInit, ControlValueAccessor {\n\n  private _value: string = '';\n  private _simpleMDE: any;\n  private _fromEditor: boolean = false;\n\n  @ViewChild('simplemde') textarea: ElementRef;\n  @Input() options: any = {};\n\n  constructor(private _elementRef: ElementRef,\n              private _zone: NgZone,\n              private _domSanitizer: DomSanitizer,\n              @Inject(DOCUMENT) private _document: any) {}\n\n  /* tslint:disable-next-line */\n  propagateChange = (_: any) => {};\n  onTouched = () => noop;\n\n  /**\n   * value?: string\n   * Value in the Editor after async getEditorContent was called\n   */\n  @Input('value')\n  set value(value: string) {\n    this._value = value;\n    if (this._simpleMDE) {\n      if (!this._fromEditor) {\n        this._simpleMDE.value(value);\n      }\n      this.propagateChange(this._value);\n      this._fromEditor = false;\n      this._zone.run(() => this._value = value);\n    }\n  }\n\n  get value(): string {\n      return this._value;\n  }\n\n  get simpleMDE(): any {\n    return this._simpleMDE;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    this.value = (!value) ? '' : value;\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  ngAfterViewInit(): void {\n    if (this._document) {\n      let styleElement: HTMLElement = this._document.createElement('style');\n      styleElement.innerHTML = <string>this._domSanitizer.bypassSecurityTrustHtml(String(SimpleMDECss));\n      this._document.head.appendChild(styleElement);\n    }\n    this.options.element = this.textarea.nativeElement;\n    this._simpleMDE = new SimpleMDE(this.options);\n    this._simpleMDE.value(this.value);\n    this._simpleMDE.codemirror.on('change', () => {\n      this._fromEditor = true;\n      this.writeValue(this._simpleMDE.value());\n    });\n  }\n\n  /* Wrapped function provided by SimpleMDE */\n\n  isPreviewActive(): boolean {\n    return this._simpleMDE.isPreviewActive();\n  }\n\n  isSideBySideActive(): boolean {\n    return this._simpleMDE.isSideBySideActive();\n  }\n\n  isFullscreenActive(): boolean {\n    return this._simpleMDE.isFullscreenActive();\n  }\n\n  clearAutosavedValue(): void {\n    this._simpleMDE.clearAutosavedValue();\n  }\n\n  toTextArea(): void {\n    this._simpleMDE.toTextArea();\n  }\n\n  toggleBold(): void {\n    this._simpleMDE.toggleBold();\n  }\n\n  toggleItalic(): void {\n    this._simpleMDE.toggleItalic();\n  }\n\n  toggleStrikethrough(): void {\n    this._simpleMDE.toggleStrikethrough();\n  }\n\n  toggleHeadingSmaller(): void {\n    this._simpleMDE.toggleHeadingSmaller();\n  }\n\n  toggleHeadingBigger(): void {\n    this._simpleMDE.toggleHeadingBigger();\n  }\n\n  toggleHeading1(): void {\n    this._simpleMDE.toggleHeading1();\n  }\n\n  toggleHeading2(): void {\n    this._simpleMDE.toggleHeading2();\n  }\n\n  toggleHeading3(): void {\n    this._simpleMDE.toggleHeading3();\n  }\n\n  toggleCodeBlock(): void {\n    this._simpleMDE.toggleCodeBlock();\n  }\n\n  toggleBlockquote(): void {\n    this._simpleMDE.toggleBlockquote();\n  }\n\n  toggleUnorderedList(): void {\n    this._simpleMDE.toggleUnorderedList();\n  }\n\n  toggleOrderedList(): void {\n    this._simpleMDE.toggleOrderedList();\n  }\n\n  cleanBlock(): void {\n    this._simpleMDE.cleanBlock();\n  }\n\n  drawLink(): void {\n    this._simpleMDE.drawLink();\n  }\n\n  drawImage(): void {\n    this._simpleMDE.drawImage();\n  }\n\n  drawTable(): void {\n    this._simpleMDE.drawTable();\n  }\n\n  drawHorizontalRule(): void {\n    this._simpleMDE.drawHorizontalRule();\n  }\n\n  togglePreview(): void {\n    this._simpleMDE.togglePreview();\n  }\n\n  toggleSideBySide(): void {\n    this._simpleMDE.toggleSideBySide();\n  }\n\n  toggleFullScreen(): void {\n    this._simpleMDE.toggleFullScreen();\n  }\n}\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "Input",
    "NgZone",
    "ElementRef",
    "forwardRef",
    "Component"
  ],
  "mappings": "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"
}
